from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, MessageHandler, Filters, CommandHandler, CallbackQueryHandler
from credits2 import bot_token
import requests
from bs4 import BeautifulSoup as bs
from random import randint


bot = Bot(bot_token)
updater = Updater(bot_token, use_context=True)  # —Å–≤—è–∑—ã–≤–∞–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º, –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
dispatcher = updater.dispatcher     # —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞–º

weekdays = {1: 'MO.txt', 2: 'TU.txt', 3: 'WE.txt', 4: 'TH.txt', 5: 'FR.txt', 6: "SA.txt", 7: 'SU.txt'}


def start(update, context):     # –ø–µ—Ä–≤—ã–π –•–≠–ù–î–õ–ï–† –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.bot.send_message(update.effective_chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø - —Ç–≤–æ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫üìî. –î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è!üëã\n\n'
                                                       '/show - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µüìì\n/add - –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µüñä\n'
                                                       '/del - —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ‚úñ\n/change - –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è\n'
                                                       '/lol - —è —É—Å—Ç–∞–ª! –†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç\n'
                                                       '/day - –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏')


def delete_event(update, context):
    context.bot.send_message(update.effective_chat.id, '–©–∞ —É–¥–∞–ª–∏–º. –ß—Ç–æ –ª–∏—à–Ω–µ–µ?')


def add_event(update, context):
    context.bot.send_message(update.effective_chat.id, '–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –¥–æ–±–∞–≤–∏–º?')


def change_event(update, context):
    context.bot.send_message(update.effective_chat.id, '–ù–µ –≤–æ–ø—Ä–æ—Å! –ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º?')


def parse_joke(update, context):
    url = 'https://www.mk.ru/editions/daily/2022/12/21/goryachaya-pyaterka-anekdotov-mk.html'
    response = requests.get(url).text
    soup = bs(response, 'html.parser')
    joke1 = soup.find('div', class_='article__body').text
    joke1 = joke1.replace('\n', '').split('\xa0')
    num_of_joke = randint(0, len(joke1) - 1)
    context.bot.send_message(update.effective_chat.id, ''.join(joke1[num_of_joke]))
    # context.bot.send_message(update.effective_chat.id, '—Ö–æ-—Ö–æ-—Ö–æ')


# def get_day(update, context):
#     keyboard = [
#         [InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='1'), InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫', callback_data='2'),
#         InlineKeyboardButton('–°—Ä–µ–¥–∞', callback_data='3')], [InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥', callback_data='4'),
#         InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞', callback_data='5'),
#         InlineKeyboardButton('–°—É–±–±–æ—Ç–∞', callback_data='6'), InlineKeyboardButton('–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', callback_data='7')]
#     ]
#     update.message.reply_text('–ù—É-—Å –≤—ã–±–∏—Ä–∞–π...', reply_markup=InlineKeyboardMarkup(keyboard))
#
def show_schedule(update, context):
    keyboard = [
        [InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data='1'), InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫', callback_data='2'),
         InlineKeyboardButton('–°—Ä–µ–¥–∞', callback_data='3')], [InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥', callback_data='4'),
                                                             InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞', callback_data='5'),
                                                             InlineKeyboardButton('–°–ë', callback_data='6'),
                                                             InlineKeyboardButton('–í–°', callback_data='7')]
    ]
    update.message.reply_text('–ù—É-—Å –≤—ã–±–∏—Ä–∞–π...', reply_markup=InlineKeyboardMarkup(keyboard))

    # context.bot.send_message(update.effective_chat.id, '–ù—É —Ç—ã, –¥—Ä—É–∂–∏—â–µ, –∑–∞–Ω—è—Ç–æ–π...')


def button_push(update, context):
    query = update.callback_query
    query.answer()
    if query.data == '1':
        context.bot.send_message(update.effective_chat.id, "–†–∞–±–æ—á–∞—è –Ω–µ–¥–µ–ª—è —Å—Ç–∞—Ä—Ç—É–µ—Ç!")
    elif query.data == '2':
        context.bot.send_message(update.effective_chat.id, "–î–µ–Ω—å –≤ –æ—Ñ–∏—Å–µ –≤—Ç–æ—Ä–æ–π")
    elif query.data == '3':
        context.bot.send_message(update.effective_chat.id, "–°—Ä–µ–¥–∞")
    elif query.data == '4':
        context.bot.send_message(update.effective_chat.id, "–ß–¢")
    elif query.data == '5':
        context.bot.send_message(update.effective_chat.id, "Meet your FRIends on FRIday")
    elif query.data == '6':
        context.bot.send_message(update.effective_chat.id, "–°—É–±–±–æ—Ç–∞ —É –ë–û–¢–ê")
    elif query.data == '7':
        context.bot.send_message(update.effective_chat.id, "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ–º –æ—Ç–¥–æ—Ö–Ω—ë–º?")



def unknown_command(update, context):
    context.bot.send_message(update.effective_chat.id, '–ö–∞–∂–µ—Ç—Å—è, –º—ã –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–µ –ø–æ–Ω—è–ª–∏. –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑–æ–∫!')


def repeat_message(update, context):
    msg = update.message.text.upper()
    # start_list = ['–ö–¢–û', '–ß–¢–û –î–ï–õ–ê–¢–¨', '–ü–†–ï–î–°–¢–ê–í–¨', '–ö–û–ú–ê–ù–î', '–ü–û–î–°–ö–ê']
    # count_i = 0
    # i = 0
    # while i < len(start_list):
    #     if start_list[i] in msg: count_i += 1
    #     break
    # if count_i > 0:
    #     context.bot.send_message(update.effective_chat.id, start(update, context))
    # elif '?' in msg:
    if '?' in msg:
        context.bot.send_message(update.effective_chat.id, '...–Ω–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å.')
    else:
        context.bot.send_message(update.effective_chat.id, msg)


start_handler = CommandHandler('start', start)  # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "—Å—Ç–∞—Ä—Ç" –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ.
show_handler = CommandHandler('show', show_schedule)
delete_handler = CommandHandler('del', delete_event)
add_handler = CommandHandler('add', add_event)
change_handler = CommandHandler('change', change_event)
joke_handler = CommandHandler('lol', parse_joke)

unknown_handler = MessageHandler(Filters.command, unknown_command)
button_handler = CallbackQueryHandler(button_push)
message_handler = MessageHandler(Filters.text, repeat_message)


dispatcher.add_handler(start_handler)
dispatcher.add_handler(show_handler)
dispatcher.add_handler(delete_handler)
dispatcher.add_handler(add_handler)
dispatcher.add_handler(change_handler)
dispatcher.add_handler(joke_handler)

dispatcher.add_handler(unknown_handler)
dispatcher.add_handler(button_handler)
dispatcher.add_handler(message_handler)



updater.start_polling() # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –ø—Ä–∏—ë–º–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
updater.idle()  # –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ CTRL + C